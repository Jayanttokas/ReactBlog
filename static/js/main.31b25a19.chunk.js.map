{"version":3,"sources":["api/jsonPlaceHolder.js","actions/index.js","components/userHeader.js","components/postList.js","components/App.js","reducers/index.js","reducers/postReducer.js","reducers/userReducer.js","index.js"],"names":["axios","create","baseURL","_fetchUser","_","memoize","id","dispatch","a","jsonPlaceHolder","get","response","type","payload","data","userHeader","this","props","fetchUser","userId","user","className","name","React","Component","connect","state","ownProps","users","find","PostList","fetchPosts","posts","map","post","key","title","body","renderList","App","combineReducers","action","store","createStore","reducers","applyMiddleware","thunk","ReactDOM","render","document","querySelector"],"mappings":"sPAEeA,E,OAAAA,EAAMC,OAAO,CACxBC,QAAS,0C,QCoBPC,E,OAAaC,EAAEC,QAAF,uCAAU,WAAMC,EAAIC,GAAV,eAAAC,EAAA,sEACFC,EAAgBC,IAAhB,iBAA8BJ,IAD5B,OACnBK,EADmB,OAGrBJ,EAAS,CAAEK,KAAM,aAAcC,QAASF,EAASG,OAH5B,2CAAV,yDCnBbC,E,kLAEEC,KAAKC,MAAMC,UAAUF,KAAKC,MAAME,U,+BAG3B,IACEC,EAAQJ,KAAKC,MAAbG,KAEP,OAAIA,EAGG,yBAAKC,UAAU,UAAUD,EAAKE,MAF1B,S,GATMC,IAAMC,WAmBhBC,eAJS,SAACC,EAAOC,GAC5B,MAAO,CAAEP,KAAMM,EAAME,MAAMC,MAAK,SAAAT,GAAI,OAAIA,EAAKd,KAAOqB,EAASR,aAGzB,CAACD,UDVhB,SAACZ,GAEtB,OAAO,SAACC,GAEJJ,EAAWG,EAAIC,MCMRkB,CAAsCV,GClB/Ce,E,kLAGEd,KAAKC,MAAMc,e,mCAIX,OAAOf,KAAKC,MAAMe,MAAMC,KAAI,SAAAC,GACxB,OACI,yBAAKb,UAAU,OAAOc,IAAKD,EAAK5B,IAC5B,uBAAGe,UAAU,mCACb,yBAAKA,UAAU,WACX,yBAAKA,UAAU,eACX,4BAAKa,EAAKE,OACV,2BAAIF,EAAKG,OAEb,kBAAC,EAAD,CAAYlB,OAAQe,EAAKf,gB,+BAQzC,OAAO,yBAAKE,UAAU,2BAA2BL,KAAKsB,kB,GAxBvCf,IAAMC,WAgCdC,eAJS,SAACC,GACrB,MAAO,CAACM,MAAON,EAAMM,SAGc,CAACD,WFlCd,WAEtB,8CAAO,WAAMxB,GAAN,eAAAC,EAAA,sEAEoBC,EAAgBC,IAAI,UAFxC,OAEGC,EAFH,OAIHJ,EAAS,CAAEK,KAAM,cAAeC,QAASF,EAASG,OAJ/C,2CAAP,wDEgCWW,CAAsCK,GC1BtCS,EARH,WACZ,OACI,yBAAKlB,UAAU,gBACX,kBAAC,EAAD,Q,QCFOmB,cAAgB,CAC3BR,MCLW,WAAyB,IAAxBN,EAAuB,uDAAf,GAAIe,EAAW,uCACnC,OAAQA,EAAO7B,MACX,IAAK,cACD,OAAO6B,EAAO5B,QAElB,QACI,OAAOa,IDAfE,MENW,WAAyB,IAAxBF,EAAuB,uDAAf,GAAIe,EAAW,uCACnC,OAAQA,EAAO7B,MACX,IAAM,aACF,MAAM,GAAN,mBAAWc,GAAX,CAAkBe,EAAO5B,UAC7B,QACI,OAAOa,M,QCGbgB,EAAQC,YAAYC,EAASC,YAAgBC,MACnDC,IAASC,OACP,kBAAC,IAAD,CAAUN,MAAOA,GACf,kBAAC,EAAD,OAEFO,SAASC,cAAc,Y","file":"static/js/main.31b25a19.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nexport default axios.create({\r\n    baseURL: 'https://jsonplaceholder.typicode.com/',\r\n});","import jsonPlaceHolder from '../api/jsonPlaceHolder';\r\nimport _ from 'lodash'; \r\n\r\nexport const fetchPosts = () => {\r\n     \r\n    return async(dispatch) => {\r\n        \r\n        const response = await jsonPlaceHolder.get('/posts')\r\n    \r\n        dispatch({ type: 'FETCH_POSTS', payload: response.data})\r\n    }\r\n};\r\n\r\nexport const fetchUser = (id) => {\r\n     \r\n    return (dispatch) => {\r\n\r\n        _fetchUser(id, dispatch);\r\n\r\n    }\r\n\r\n};\r\n\r\nconst _fetchUser = _.memoize(async(id, dispatch) => {\r\n    const response = await jsonPlaceHolder.get(`/users/${id}`);\r\n    \r\n        dispatch({ type: 'FETCH_USER', payload: response.data})\r\n});","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport { fetchUser } from '../actions';\r\n\r\nclass userHeader extends React.Component {\r\n    componentDidMount(){\r\n        this.props.fetchUser(this.props.userId);\r\n    }\r\n    \r\n    render(){\r\n        const {user} = this.props\r\n\r\n        if(!user) {\r\n            return null;\r\n        }\r\n        return <div className=\"header\">{user.name}</div>;\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return { user: state.users.find(user => user.id === ownProps.userId )};\r\n}\r\n\r\nexport default connect(mapStateToProps, {fetchUser})(userHeader);","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {fetchPosts} from '../actions/index';\r\nimport UserHeader from './userHeader';\r\n\r\nclass PostList extends React.Component{\r\n   \r\n    componentDidMount(){\r\n        this.props.fetchPosts();\r\n    }\r\n\r\n    renderList(){\r\n        return this.props.posts.map(post => {\r\n            return(\r\n                <div className=\"item\" key={post.id}>\r\n                    <i className=\"large middle aligned icon user\"></i>\r\n                    <div className=\"content\">\r\n                        <div className=\"description\">\r\n                            <h2>{post.title}</h2>\r\n                            <p>{post.body}</p>\r\n                        </div>\r\n                        <UserHeader userId={post.userId} />\r\n                    </div>\r\n                </div>\r\n            );\r\n        });\r\n    }\r\n   \r\n    render() {\r\n        return <div className=\"ui relaxed divided list\">{this.renderList()}</div>;\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {posts: state.posts };\r\n}\r\n\r\nexport default connect(mapStateToProps,{fetchPosts})(PostList);","import React from 'react';\r\nimport PostList from './postList';\r\n\r\nconst App = () => {  \r\nreturn(\r\n    <div className=\"ui container\">\r\n        <PostList/>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default App;","import {combineReducers} from 'redux';\r\nimport postReducer from './postReducer';\r\nimport usersReducer from './userReducer';\r\n\r\nexport default combineReducers({\r\n    posts: postReducer,\r\n    users: usersReducer\r\n});\r\n","export default (state = [] ,action) => {\r\n    switch (action.type) {\r\n        case 'FETCH_POSTS' : \r\n            return action.payload;\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};","export default (state = [], action) => {\r\n    switch (action.type)  {\r\n        case ('FETCH_USER'): \r\n            return [...state, action.payload];\r\n        default: \r\n            return state;\r\n    }\r\n};","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { createStore, applyMiddleware } from 'redux';\r\nimport App from './components/App';\r\nimport reducers from './reducers';\r\nimport thunk from 'redux-thunk';\r\n\r\nconst store = createStore(reducers,applyMiddleware(thunk));\r\nReactDOM.render( \r\n  <Provider store={store}>\r\n    <App/>\r\n  </Provider>,\r\n  document.querySelector(\"#root\")\r\n);"],"sourceRoot":""}